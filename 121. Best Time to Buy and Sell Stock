动态规划求解思路
1.原问题转化为两个子问题：
    i-1时序列的交易最大值 和 price[i]-历史最低价 中更大的值
2.状态转移
    maxGlobal=max(maxGlobal,prices[i]-minHistory)
    minHistory=min(minHistory,prices[i])
3.初始状态
  i=1 时开始 maxGlobal=0,minHistory=prices[0]
  
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size()<2) return 0;
        int maxG=0;
        int minp=prices[0];
        for(int i=1;i<prices.size();i++){
            maxG=max(prices[i]-minp,maxG);
            minp=min(minp,prices[i]);
        }
        return maxG;
    }
};
